<!-- 
    Axiom UI
    Copyright (C) 2017-2021 Matt McManis
    https://github.com/MattMcManis/Axiom
    https://axiomui.github.io
    mattmcmanis@outlook.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.If not, see<http://www.gnu.org/licenses/> . 
 -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template Default
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


    <!--/////////////////////////////////////
         Main Window Default
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Label
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         ComboBox Default
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Textbox Default
        /////////////////////////////////////-->

    <!--/////////////////////////////////////
          TextBox Cut
        /////////////////////////////////////-->
    <SolidColorBrush x:Key="TextBoxCut.Static.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="TextBoxCut.Disabled.Background"
                     Color="Transparent" />

    <SolidColorBrush x:Key="TextBoxCut.Static.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="TextBoxCut.Disabled.Border"
                     Color="Transparent" />

    <SolidColorBrush x:Key="TextBoxCut.MouseOver.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="TextBoxCut.Focus.Border"
                     Color="Transparent" />

    <Style x:Key="TextBoxCut"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxCut.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <!-- TextBox Triggers -->
                    <ControlTemplate.Triggers>
                        <!-- Enabled / Disabled TextBox Colors & Opacity -->
                        <Trigger Property="IsEnabled"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxCut.Static.Background}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource TextBoxCut.Static.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="1.00" />
                            <Setter Property="Background"
                                    Value="{StaticResource TextBoxCut.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource TextBoxCut.Disabled.Border}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TextBoxCut.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TextBoxCut.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <!--/////////////////////////////////////
         Label Cut
        /////////////////////////////////////-->



    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template White
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->

    <!--/////////////////////////////////////
         ComboBox White
        /////////////////////////////////////-->
    <!-- ComboBox White Item - Format Containers -->
    <Style x:Key="ComboBoxCategoryStyleItem_FormatContainer"
           TargetType="{x:Type ComboBoxItem}">
        <Style.Triggers>
            <!-- Headers -->
            <DataTrigger Binding="{Binding Category}"
                         Value="True">
                <Setter Property="IsEnabled"
                        Value="False" />
                <Setter Property="FontWeight"
                        Value="Bold" />
                <Setter Property="Margin"
                        Value="0,7,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Category}"
                         Value="False">
                <Setter Property="Margin"
                        Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox White Item -->
    <Style x:Key="ComboBoxCategoryStyleItem"
           TargetType="{x:Type ComboBoxItem}">
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--/////////////////////////////////////
         TextBox White
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         ComboBox Glyph White
        /////////////////////////////////////-->



    <!--///////////////////////////////////////////////////////////////////////////////////////////////////////////////
         Template Custom
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


    <!--/////////////////////////////////////
         Main Window 
        /////////////////////////////////////-->

    <!-- Main Window Style Custom -->
    <Style x:Key="WindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FFF8F8F8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Configure Window -->
    <Style x:Key="WindowConfigure"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FFF8F8F8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Crop Window -->
    <Style x:Key="WindowCrop"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FFF8F8F8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Optimize Advanced -->
    <Style x:Key="WindowOptimizeAdvanced"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FFF8F8F8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Log Console -->
    <Style x:Key="WindowLogConsole"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FF555555" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Debug Console -->
    <Style x:Key="WindowDebugConsole"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <!--Background-->
        <Setter Property="Background"
                Value="#FF444444" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--/////////////////////////////////////
        ComboBox Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
          TextBox Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        TextBox Browse Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        ComboBox Glyph Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Custom Crop
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Crop Button TextBlock
        /////////////////////////////////////-->
    <Style x:Key="ButtonCropTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping"
                Value="NoWrap" />
        <Setter Property="TextTrimming"
                Value="None" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="TextElement.Foreground"
                Value="Black" />

        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="TextElement.Foreground"
                        Value="#FF838383" />
            </Trigger>
        </Style.Triggers>

    </Style>


    <!--/////////////////////////////////////
        Button Folder
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Button Folder Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
          Volume TextBox
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Button Custom Volume
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         Toggle Button Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
         TextBlock Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Toggle Button Small Custom
        /////////////////////////////////////-->


    <!--/////////////////////////////////////
        Volume Button Glyph
        /////////////////////////////////////-->




    <!--/////////////////////////////////////
        Black Icons
        /////////////////////////////////////-->

    <!-- Info Button -->
    <Style x:Key="ButtonInfo"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/info.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Website Button -->
    <Style x:Key="ButtonWebsite"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/web.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Update Button -->
    <Style x:Key="ButtonUpdate"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/update.png" />
    </Style>

    <!-- Configure Button -->
    <Style x:Key="ButtonConfigure"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/configuregear.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Window Button -->
    <Style x:Key="ButtonWindow"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/window.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Auto Sort Script Button -->
    <Style x:Key="ButtonAutoSortScript"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/autosortscript.png" />
    </Style>

    <!-- Debug Console Button -->
    <Style x:Key="ButtonDebugConsole"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/debugconsole.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Log Console Button -->
    <Style x:Key="ButtonLogConsole"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/logconsole.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Log Button -->
    <Style x:Key="ButtonLog"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/log.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- CMD Button -->
    <Style x:Key="ButtonCMD"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/cmd.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Properties Button -->
    <Style x:Key="ButtonProperties"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/properties.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Play Button -->
    <Style x:Key="ButtonPlay"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/autoplay.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Clear Button -->
    <Style x:Key="ButtonClear"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/clear.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Folder Button -->
    <Style x:Key="ButtonQuickFolder"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/folder.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Revert Arrow Button -->
    <Style x:Key="ButtonRevertArrow"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/revertarrow.png" />
        <Setter Property="Opacity"
                Value="0.8" />
    </Style>

    <!-- Volume Up Button -->
    <Style x:Key="ButtonVolumeUp"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/ArrowUp.png" />
        <Setter Property="Opacity"
                Value="0.8" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Volume Down Button -->
    <Style x:Key="ButtonVolumeDown"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/ArrowDown.png" />
        <Setter Property="Opacity"
                Value="0.8" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Delete Button -->
    <Style x:Key="ButtonDeleteStyle"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/delete.png" />
        <Setter Property="Stretch"
                Value="Uniform" />
    </Style>

    <!-- Export Button -->
    <Style x:Key="ButtonExportStyle"
           TargetType="{x:Type Image}">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Source"
                Value="../Resources/Images/Buttons/Black/export.png" />
        <Setter Property="Stretch"
                Value="Uniform" />
    </Style>

</ResourceDictionary>